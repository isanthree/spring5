<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--配置User对象创建-->
    <bean id="user" class="com.isanthree.spring5.User"></bean>

    <!--set方法注入属性-->
    <bean id="book" class="com.isanthree.spring5.Book">
        <!--使用property完成属性注入
            name：类里面属性名称
            value：向属性注入的值
        -->
        <property name="BName" value="易筋经"></property>
        <property name="BAuthor" value="达摩老祖"></property>
<!--        <property name="Address"><null/></property> &lt;!&ndash;给属性 address 设置 null 值&ndash;&gt;-->
        <!--当属性值包含特殊符号时，
            1. 把<>进行转义 &lt; &gt;
            2. 把带特殊符号内容写到CDATA
        -->
        <property name="Address">
            <value><![CDATA[<<少林寺>>]]></value>
        </property>
    </bean>

    <!-- p 名称空间注入，简化基于 xml 的配置方式-->
    <bean id="book_p" class="com.isanthree.spring5.Book" p:BName="倚天屠龙记" p:BAuthor="金庸">
    </bean>

    <!--使用有参构造注入属性-->
    <bean id="orders" class="com.isanthree.spring5.Orders">
        <constructor-arg name="orderName" value="Huawei"></constructor-arg>
        <constructor-arg name="address" value="China"></constructor-arg>
    </bean>

</beans>
